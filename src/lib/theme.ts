import { useColorScheme } from 'react-native';
import { MD3DarkTheme, MD3LightTheme, useTheme } from 'react-native-paper';

export const useAppTheme = () => {
  const colorScheme = useColorScheme();
  return colorScheme === 'dark' ? useTheme<(typeof theme)['dark']>() : useTheme<(typeof theme)['light']>();
};

const fonts = {
  markoOneDisplaySmall: { ...MD3DarkTheme.fonts.displaySmall, fontFamily: 'MarkoOne_400Regular' },
  markoOneDisplayMedium: { ...MD3DarkTheme.fonts.displayMedium, fontFamily: 'MarkoOne_400Regular' },
  markoOneDisplayLarge: { ...MD3DarkTheme.fonts.displayLarge, fontFamily: 'MarkoOne_400Regular' },
  markoOneHeadlineSmall: { ...MD3DarkTheme.fonts.headlineSmall, fontFamily: 'MarkoOne_400Regular' },
  markoOneHeadlineMedium: { ...MD3DarkTheme.fonts.headlineMedium, fontFamily: 'MarkoOne_400Regular' },
  markoOneHeadlineLarge: { ...MD3DarkTheme.fonts.headlineLarge, fontFamily: 'MarkoOne_400Regular' },
  markoOneBodySmall: { ...MD3DarkTheme.fonts.bodySmall, fontFamily: 'MarkoOne_400Regular' },
  markoOneBodyMedium: { ...MD3DarkTheme.fonts.bodyMedium, fontFamily: 'MarkoOne_400Regular' },
  markoOneBodyLarge: { ...MD3DarkTheme.fonts.bodyLarge, fontFamily: 'MarkoOne_400Regular' },
};

const theme = {
  light: {
    ...MD3LightTheme,
    fonts: { ...MD3LightTheme.fonts, ...fonts },
    colors: {
      primary: 'rgb(0, 107, 89)',
      onPrimary: 'rgb(255, 255, 255)',
      primaryContainer: 'rgb(122, 248, 218)',
      onPrimaryContainer: 'rgb(0, 32, 26)',
      secondary: 'rgb(75, 99, 92)',
      onSecondary: 'rgb(255, 255, 255)',
      secondaryContainer: 'rgb(205, 232, 223)',
      onSecondaryContainer: 'rgb(7, 32, 26)',
      tertiary: 'rgb(66, 98, 119)',
      onTertiary: 'rgb(255, 255, 255)',
      tertiaryContainer: 'rgb(199, 231, 255)',
      onTertiaryContainer: 'rgb(0, 30, 46)',
      error: 'rgb(186, 26, 26)',
      onError: 'rgb(255, 255, 255)',
      errorContainer: 'rgb(255, 218, 214)',
      onErrorContainer: 'rgb(65, 0, 2)',
      background: 'rgb(250, 253, 250)',
      onBackground: 'rgb(25, 28, 27)',
      surface: 'rgb(250, 253, 250)',
      onSurface: 'rgb(25, 28, 27)',
      surfaceVariant: 'rgb(219, 229, 224)',
      onSurfaceVariant: 'rgb(63, 73, 69)',
      outline: 'rgb(111, 121, 117)',
      outlineVariant: 'rgb(191, 201, 196)',
      shadow: 'rgb(0, 0, 0)',
      scrim: 'rgb(0, 0, 0)',
      inverseSurface: 'rgb(46, 49, 48)',
      inverseOnSurface: 'rgb(239, 241, 239)',
      inversePrimary: 'rgb(91, 219, 190)',
      elevation: {
        level0: 'transparent',
        level1: 'rgb(238, 246, 242)',
        level2: 'rgb(230, 241, 237)',
        level3: 'rgb(223, 237, 232)',
        level4: 'rgb(220, 236, 231)',
        level5: 'rgb(215, 233, 228)',
      },
      surfaceDisabled: 'rgba(25, 28, 27, 0.12)',
      onSurfaceDisabled: 'rgba(25, 28, 27, 0.38)',
      backdrop: 'rgba(41, 50, 47, 0.4)',
    },
  },
  dark: {
    ...MD3DarkTheme,
    fonts: { ...MD3DarkTheme.fonts, ...fonts },
    colors: {
      primary: 'rgb(91, 219, 190)',
      onPrimary: 'rgb(0, 56, 46)',
      primaryContainer: 'rgb(0, 81, 67)',
      onPrimaryContainer: 'rgb(122, 248, 218)',
      secondary: 'rgb(177, 204, 195)',
      onSecondary: 'rgb(29, 53, 47)',
      secondaryContainer: 'rgb(51, 75, 69)',
      onSecondaryContainer: 'rgb(205, 232, 223)',
      tertiary: 'rgb(170, 203, 227)',
      onTertiary: 'rgb(16, 52, 71)',
      tertiaryContainer: 'rgb(42, 74, 95)',
      onTertiaryContainer: 'rgb(199, 231, 255)',
      error: 'rgb(255, 180, 171)',
      onError: 'rgb(105, 0, 5)',
      errorContainer: 'rgb(147, 0, 10)',
      onErrorContainer: 'rgb(255, 180, 171)',
      background: 'rgb(25, 28, 27)',
      onBackground: 'rgb(225, 227, 224)',
      surface: 'rgb(25, 28, 27)',
      onSurface: 'rgb(225, 227, 224)',
      surfaceVariant: 'rgb(63, 73, 69)',
      onSurfaceVariant: 'rgb(191, 201, 196)',
      outline: 'rgb(137, 147, 143)',
      outlineVariant: 'rgb(63, 73, 69)',
      shadow: 'rgb(0, 0, 0)',
      scrim: 'rgb(0, 0, 0)',
      inverseSurface: 'rgb(225, 227, 224)',
      inverseOnSurface: 'rgb(46, 49, 48)',
      inversePrimary: 'rgb(0, 107, 89)',
      elevation: {
        level0: 'transparent',
        level1: 'rgb(28, 38, 35)',
        level2: 'rgb(30, 43, 40)',
        level3: 'rgb(32, 49, 45)',
        level4: 'rgb(33, 51, 47)',
        level5: 'rgb(34, 55, 50)',
      },
      surfaceDisabled: 'rgba(225, 227, 224, 0.12)',
      onSurfaceDisabled: 'rgba(225, 227, 224, 0.38)',
      backdrop: 'rgba(41, 50, 47, 0.4)',
    },
  },
};

export default theme;
